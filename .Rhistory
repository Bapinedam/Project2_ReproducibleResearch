install.packages("readr")
library(readr)
data <- read_csv("repdata_data_StormData.csv.bz2")
View(data)
unique(data$EVTYPE)
library(dplyr)
evtype <- data %>% group_by(EVTYPE) %>% mutate(Percentage = n / sum(n))
evtype <- data %>% group_by("EVTYPE") %>% mutate(Percentage = n / sum(n))
evtype <- data %>% group_by("EVTYPE") %>% mutate("Percentage" = n / sum(n))
summary(data)
evtype <- data %>% group_by("EVTYPE") %>% tally()
View(evtype)
evtype <- data %>% group_by(EVTYPE) %>% tally()
View(evtype)
evtype <- data %>% group_by(EVTYPE) %>% summarise(Percetage = tally() / sum(tally()))
evtype <- data %>% group_by(EVTYPE) %>% summarise(n = n())
evtype <- data %>% group_by(EVTYPE) %>% summarise(n = n()) %>% ,utate(Percentage = n / sum(n))
evtype <- data %>% group_by(EVTYPE) %>% summarise(n = n()) %>% mutate(Percentage = n / sum(n))
View(evtype)
evtype <- evtype[order(evtype$Percentage),]
View(evtype)
evtype <- evtype[order(evtype$Percentage, decreasing = TRUE),]
head(evtype)
library(wordcloud2)
wordcloud2(data = evtype, size=1.6)
set.seed(1234)
wordcloud2(data = evtype, size=1.6)
View(evtype)
View(evtype)
evtype %>%
arrange(Percentage) %>%    # First sort by val. This sort the dataframe but NOT the factor levels
mutate(name = factor(name, levels = EVTYPE)) %>%   # This trick update the factor levels
ggplot( aes(x = name, y = Percentage)) +
geom_segment( aes(xend = name, yend=0)) +
geom_point( size=4, color="orange") +
coord_flip() +
theme_bw() +
xlab("")
library(ggplot2)
evtype %>%
arrange(Percentage) %>%    # First sort by val. This sort the dataframe but NOT the factor levels
mutate(name = factor(name, levels = EVTYPE)) %>%   # This trick update the factor levels
ggplot( aes(x = name, y = Percentage)) +
geom_segment( aes(xend = name, yend=0)) +
geom_point( size=4, color="orange") +
coord_flip() +
theme_bw() +
xlab("")
evtype %>%
arrange(Percentage) %>%    # First sort by val. This sort the dataframe but NOT the factor levels
mutate(name = factor(EVTYPE, levels = EVTYPE)) %>%   # This trick update the factor levels
ggplot( aes(x = name, y = Percentage)) +
geom_segment( aes(xend = name, yend=0)) +
geom_point( size=4, color="orange") +
coord_flip() +
theme_bw() +
xlab("")
head(evtype, 20) %>%
arrange(Percentage) %>%    # First sort by val. This sort the dataframe but NOT the factor levels
mutate(name = factor(EVTYPE, levels = EVTYPE)) %>%   # This trick update the factor levels
ggplot( aes(x = name, y = Percentage)) +
geom_segment( aes(xend = name, yend=0)) +
geom_point( size=4, color="orange") +
coord_flip() +
theme_bw() +
xlab("")
wordcloud2(head(data, 20) = evtype, size=1.6)
wordcloud2(data = head(evtype, 20), size=1.6)
colnames(data)
unique(data$FATALITIES)
unique(data$INJURIES)
evtype <- data %>% group_by(EVTYPE) %>% summarise(INJURIES = sum(INJURIES))
View(evtype)
evtype <- evtype[order(evtype$INJURIES, decreasing = TRUE),]
head(evtype)
wordcloud2(data = head(evtype, 20), size=1.6)
head(evtype, 20) %>%
arrange(Percentage) %>%    # First sort by val. This sort the dataframe but NOT the factor levels
mutate(name = factor(EVTYPE, levels = EVTYPE)) %>%   # This trick update the factor levels
ggplot( aes(x = name, y = Percentage)) +
geom_segment( aes(xend = name, yend=0)) +
geom_point( size=4, color="orange") +
coord_flip() +
theme_bw() +
xlab("")
head(evtype, 20) %>%
arrange(Percentage) %>%    # First sort by val. This sort the dataframe but NOT the factor levels
mutate(name = factor(EVTYPE, levels = EVTYPE)) %>%   # This trick update the factor levels
ggplot( aes(x = name, y = INJURIES)) +
geom_segment( aes(xend = name, yend=0)) +
geom_point( size=4, color="orange") +
coord_flip() +
theme_bw() +
xlab("")
head(evtype, 20) %>%
arrange(INJURIES) %>%    # First sort by val. This sort the dataframe but NOT the factor levels
mutate(name = factor(EVTYPE, levels = EVTYPE)) %>%   # This trick update the factor levels
ggplot( aes(x = name, y = INJURIES)) +
geom_segment( aes(xend = name, yend=0)) +
geom_point( size=4, color="orange") +
coord_flip() +
theme_bw() +
xlab("")
wordcloud2(data = head(evtype, 20), size=1.6)
colnames(data)
unique(data$BGN_DATE)
colnames(data)
View(evtype)
View(data)
head(evtype, 20) %>%
arrange(INJURIES) %>%    # First sort by val. This sort the dataframe but NOT the factor levels
mutate(name = factor(EVTYPE, levels = EVTYPE)) %>%   # This trick update the factor levels
ggplot( aes(x = name, y = INJURIES)) +
geom_segment( aes(xend = name, yend=0)) +
geom_point( size=4, color="orange") +
coord_flip() +
theme_bw() +
xlab("")
data$PROPDMGEXP[data$PROPDMGEXP == ""] <- NA
data$PROPDMGEXP <- gsub("1", "10", data$PROPDMGEXP)
data$PROPDMGEXP <- gsub("NA", "1", data$PROPDMGEXP)
data$PROPDMGEXP <- gsub("\\-", "1", data$PROPDMGEXP)
data$PROPDMGEXP <- gsub("\\?", "1", data$PROPDMGEXP)
data$PROPDMGEXP <- gsub("\\+", "1", data$PROPDMGEXP)
data$PROPDMGEXP <- gsub("^0$", "1", data$PROPDMGEXP)
data$PROPDMGEXP <- gsub("h|H", "100", data$PROPDMGEXP)
data$PROPDMGEXP <- gsub("K", "1000", data$PROPDMGEXP)
data$PROPDMGEXP <- gsub("m|M", "1000000", data$PROPDMGEXP)
data$PROPDMGEXP <- gsub("B", "1000000000", data$PROPDMGEXP)
data$PROPDMGEXP <- gsub("2", "100", data$PROPDMGEXP)
data$PROPDMGEXP <- gsub("3", "1000", data$PROPDMGEXP)
data$PROPDMGEXP <- gsub("4", "10000", data$PROPDMGEXP)
data$PROPDMGEXP <- gsub("5", "100000", data$PROPDMGEXP)
data$PROPDMGEXP <- gsub("6", "1000000", data$PROPDMGEXP)
data$PROPDMGEXP <- gsub("7", "10000000", data$PROPDMGEXP)
data$PROPDMGEXP <- gsub("8", "100000000", data$PROPDMGEXP)
propdmgexp <- group_by(EVTYPE) %>% summarise("PROPERTY DAMAGED" = sum(PROPDMGEXP))
propdmgexp <- data %>% group_by(EVTYPE) %>% summarise("PROPERTY DAMAGED" = sum(PROPDMGEXP))
propdmgexp <- data %>% group_by(EVTYPE) %>% summarise(`PROPERTY DAMAGED` = sum(PROPDMGEXP))
propdmgexp <- data %>% group_by(EVTYPE) %>% summarise(PROPERTY DAMAGED = sum(PROPDMGEXP))
propdmgexp <- data %>% group_by(EVTYPE) %>% summarise("PROPERTY DAMAGED" = sum(PROPDMGEXP))
propdmgexp <- data %>% group_by(EVTYPE) %>% summarise(DAMAGED = sum(PROPDMGEXP))
unique(data$PROPDMGEXP)
propdmgexp <- data %>% group_by(EVTYPE) %>% summarise(DAMAGED = sum(PROPDMGEXP, na.rm = TRUE))
data$PROPDMGEXP <- as.numeric(data$PROPDMGEXP)
propdmgexp <- data %>% group_by(EVTYPE) %>% summarise(DAMAGED = sum(PROPDMGEXP, na.rm = TRUE))
View(propdmgexp)
propdmgexp <- data %>% group_by(EVTYPE) %>% summarise("PROPERTY DAMAGED" = sum(PROPDMGEXP, na.rm = TRUE))
head(propdmgexp, 20) %>%
arrange("PROPERTY DAMAGED") %>%    # First sort by val. This sort the dataframe but NOT the factor levels
mutate(name = factor(EVTYPE, levels = EVTYPE)) %>%   # This trick update the factor levels
ggplot( aes(x = name, y = "PROPERTY DAMAGED")) +
geom_segment( aes(xend = name, yend=0)) +
geom_point( size=4, color="orange") +
coord_flip() +
theme_bw() +
xlab("")
head(propdmgexp, 20) %>%
arrange(`PROPERTY DAMAGED`) %>%    # First sort by val. This sort the dataframe but NOT the factor levels
mutate(name = factor(EVTYPE, levels = EVTYPE)) %>%   # This trick update the factor levels
ggplot( aes(x = name, y = `PROPERTY DAMAGED`)) +
geom_segment( aes(xend = name, yend=0)) +
geom_point( size=4, color="orange") +
coord_flip() +
theme_bw() +
xlab("")
head(propdmgexp[propdmgexp$EVTYPE != "?", ], 20) %>%
arrange(`PROPERTY DAMAGED`) %>%    # First sort by val. This sort the dataframe but NOT the factor levels
mutate(name = factor(EVTYPE, levels = EVTYPE)) %>%   # This trick update the factor levels
ggplot( aes(x = name, y = `PROPERTY DAMAGED`)) +
geom_segment( aes(xend = name, yend=0)) +
geom_point( size=4, color="orange") +
coord_flip() +
theme_bw() +
xlab("")
propdmgexp <- propdmgexp[order(propdmgexp$`PROPERTY DAMAGED`), ]
head(propdmgexp[propdmgexp$EVTYPE != "?", ], 20) %>%
arrange(`PROPERTY DAMAGED`) %>%    # First sort by val. This sort the dataframe but NOT the factor levels
mutate(name = factor(EVTYPE, levels = EVTYPE)) %>%   # This trick update the factor levels
ggplot( aes(x = name, y = `PROPERTY DAMAGED`)) +
geom_segment( aes(xend = name, yend=0)) +
geom_point( size=4, color="orange") +
coord_flip() +
theme_bw() +
xlab("")
View(propdmgexp)
propdmgexp <- propdmgexp[order(propdmgexp$`PROPERTY DAMAGED`, decreasing = TRUE), ]
head(propdmgexp[propdmgexp$EVTYPE != "?", ], 20) %>%
arrange(`PROPERTY DAMAGED`) %>%    # First sort by val. This sort the dataframe but NOT the factor levels
mutate(name = factor(EVTYPE, levels = EVTYPE)) %>%   # This trick update the factor levels
ggplot( aes(x = name, y = `PROPERTY DAMAGED`)) +
geom_segment( aes(xend = name, yend=0)) +
geom_point( size=4, color="orange") +
coord_flip() +
theme_bw() +
xlab("")
